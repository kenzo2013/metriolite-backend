c
tag
c
!tag.has_key?("date")
!tag.has_key?(:date)
"date".to_sym
tag.has_key?("date".to_sym)
tag
tag.has_key?("date")
c
tag.has_key?("date")
tag.has_key?(:date)
tag
c
data.first["tags"].first["date"]
data.first["tags"].first[:date]
data.first["tags"].first
data.first["tags"]
data.first
data
c
n
data
c
params[:id]
c
eval(params[:tags])
params[:tags].gsub!(/[[]]/,'').split(/\s*,\s*/)
params[:tags].gsub!(/[[]]/,’’).split(/\s*,\s*/)
b = a.clear
a = "eric"
JSON.parse(params[:tags].to_json).class
JSON.parse(params[:tags].to_json)
JSON.parse(params[:tags])
require 'json'
params[:tags]
params[:tags].first
c
params[:tags].to_array
params[:tags].to_a
params[:tags]
c
form_params.to_json
c
JSON.parse(params[:tags])
c
JSON.parse(params[:tags].to_json)
params[:tags].to_json
params[:tags]
c
params[:tags].gsub('"','')
params[:tags]
"[{date: '2021-02-01', value: 3, note: 'go'}]".split(' ')
"[{date: '2021-02-01', value: 3, note: 'go'}]".split('')
"[{date: '2021-02-01', value: 3, note: 'go'}]".split
params[:tags].eval()
params[:tags].eval
params[:tags]
c
params[:tags].to_a
params[:tags]
c
params
c
@form.errors.messages
json.(@form.errors.messages)
c
n
c
@errors
n
c
@errors.messages
@errors
n
 @form.errors
n
@form
n
c
form_params
c
form_params
params
c
params
form_params
c
Form.find_by(params[:id])
params[:id]
c
options
a
a = options.delete("id")
options
n
c
options[:id]
options["id"]
options
options["params"]
options[:params]
options[:params][:id]
n
c
Rack::Utils.parse_nested_query(args[:params])
Rack::Utils.parse_nested_query(args[:parms])
c
args[:params]
c
args[:params]
c
args[:params]
